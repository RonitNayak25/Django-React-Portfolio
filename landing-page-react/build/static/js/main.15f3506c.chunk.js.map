{"version":3,"sources":["components/ItemComponent.js","components/MainComponent.js","components/NavBarComponent.js","components/ContactComponent.js","components/FooterComponent.js","App.js","serviceWorker.js","index.js"],"names":["ItemComponent","props","className","Card","style","marginBottom","CardImg","top","width","src","image","alt","CardBody","CardTitle","title","CardText","description","MainComponent","useState","items","setItems","currentPage","setCurrentPage","useEffect","fetch","then","response","json","data","id","map","item","page","key","aria-label","onClick","tabIndex","aria-disabled","NavBarComponent","href","type","data-toggle","data-target","aria-controls","aria-expanded","ContactComponent","action","placeholder","FooterComponent","textAlign","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.15f3506c.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n    Card,\n    CardBody,\n    CardImg,\n    CardTitle,\n    CardText,\n} from \"reactstrap\";\n\nconst ItemComponent = (props) => {\n    return (\n        <div className=\"col-md-4\">\n            <Card style={{marginBottom: \"30px\"}}>\n                <CardImg\n                    top\n                    width=\"100%\"\n                    src={`http://localhost:8000${props.image}`}\n                    alt=\"Card image cap\"\n                />\n                <CardBody>\n                    <CardTitle>{props.title}</CardTitle>\n                    <CardText>{props.description}</CardText>\n                </CardBody>\n            </Card>\n        </div>\n    );\n};\n\nexport default ItemComponent;\n","import React, {useEffect, useState} from \"react\";\nimport ItemComponent from \"./ItemComponent\";\n\nconst MainComponent = () => {\n    const [items, setItems] = useState([]);\n    const [currentPage, setCurrentPage] = useState(1);\n\n    useEffect(() => {\n        fetch(\"http://127.0.0.1:8000/api/task-list/\")\n            .then((response) => response.json())\n            .then((data) => {\n                setItems(data);\n            });\n    }, []);\n\n    return (\n        <div id=\"projects\">\n            <div className=\"row\">\n                {items.map((item) => {\n                    if (item.page === currentPage) {\n                        return (\n                            <ItemComponent\n                                key={item.id}\n                                description={item.description}\n                                image={item.image}\n                                page={item.page}\n                                title={item.title}\n                            />\n                        );\n                    }\n                })}\n            </div>\n            <nav aria-label=\"Page navigation example\">\n                <ul className=\"pagination justify-content-center\">\n                    <li id=\"prev\" className={`page-item ${currentPage === 1 ? \"disabled\" : \"\"}`} onClick={() => {\n                        currentPage - 1 !== 0 ? setCurrentPage(currentPage - 1) : setCurrentPage(currentPage)\n                    }}>\n                        <button className=\"page-link\" tabIndex=\"-1\" aria-disabled=\"true\">Previous</button>\n                    </li>\n                    <li className=\"page-item\">\n                        <button className=\"page-link\" onClick={() => {\n                            setCurrentPage(1)\n                        }}>1\n                        </button>\n                    </li>\n                    <li className=\"page-item\">\n                        <button className=\"page-link\" onClick={() => {\n                            setCurrentPage(2)\n                        }}>2\n                        </button>\n                    </li>\n                    <li className=\"page-item\">\n                        <button className=\"page-link\" onClick={() => {\n                            setCurrentPage(3)\n                        }}>3\n                        </button>\n                    </li>\n                    <li id=\"next\" className={`page-item ${currentPage === 3 ? \"disabled\" : \"\"}`} onClick={() => {\n                        currentPage + 1 !== 4 ? setCurrentPage(currentPage + 1) : setCurrentPage(currentPage)\n                    }}>\n                        <button className=\"page-link\">Next</button>\n                    </li>\n                </ul>\n            </nav>\n        </div>\n    );\n};\n\nexport default MainComponent;\n","import React from \"react\";\n\nconst NavBarComponent = () => {\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n            <a className=\"navbar-brand\" href=\"#projects\">Portfolio</a>\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarText\"\n                    aria-controls=\"navbarText\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <div className=\"collapse navbar-collapse\" id=\"navbarText\">\n                <ul className=\"navbar-nav ml-auto\">\n                    <li className=\"nav-item active\">\n                        <a className=\"nav-link\" href=\"#projects\">Projects <span className=\"sr-only\">(current)</span></a>\n                    </li>\n                    <li className=\"nav-item\">\n                        <a className=\"nav-link\" href=\"#contacts\">Contacts</a>\n                    </li>\n                    <li className=\"nav-item\">\n                        <a className=\"nav-link\" href=\"#about\">About</a>\n                    </li>\n                </ul>\n            </div>\n        </nav>\n    );\n}\n\nexport default NavBarComponent;","import React from \"react\";\n\nconst ContactComponent = () => {\n    return (\n        <div id=\"contacts\">\n            <h4>Contact</h4>\n            <form action=\"#\">\n                <div className=\"form-group\">\n                    <input type=\"text\" className=\"form-control\" id=\"formGroupExampleInput\"\n                           placeholder=\"Name\" />\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"email\" className=\"form-control\" id=\"formGroupExampleInput2\"\n                           placeholder=\"Email\" />\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"text\" className=\"form-control\" id=\"formGroupExampleInput2\"\n                           placeholder=\"Subject\" />\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"textarea\" className=\"form-control\" id=\"formGroupExampleInput2\"\n                           placeholder=\"Comment\" />\n                </div>\n                <button className=\"btn btn-lg btn-outline-dark\">Send</button>\n            </form>\n            <div>\n\n            </div>\n        </div>\n);\n}\n\nexport default ContactComponent;","import React from \"react\";\n\nconst FooterComponent = () => {\n    return (\n        <footer id=\"about\" className=\"site-footer\">\n            <div className=\"row\" style={{textAlign: \"center\"}}>\n                <div className=\"col-sm-12 col-md-6\">\n                    <h6>About</h6>\n                    <p className=\"text-justify\">Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n                        Consequatur cupiditate in nemo sunt suscipit! Inventore maiores omnis placeat quaerat\n                        similique? Animi cumque deserunt explicabo ipsum maxime molestiae nam recusandae totam?</p>\n                </div>\n\n                <div className=\"col-xs-6 col-md-3\">\n                    <h6>My Expertise</h6>\n                    <ul className=\"footer-links\">\n                        <li><a href=\"#\">Pyhton</a></li>\n                        <li><a href=\"#\">Django</a></li>\n                        <li><a href=\"#\">React</a></li>\n                        <li><a href=\"#\">Java</a></li>\n                        <li><a href=\"#\">REST</a></li>\n                        <li><a href=\"#\">React Native</a></li>\n                    </ul>\n                </div>\n\n                <div className=\"col-xs-6 col-md-3\">\n                    <h6>Quick Links</h6>\n                    <ul className=\"footer-links\">\n                        <li><a href=\"#\">About Me</a></li>\n                        <li><a href=\"#\">Contact Me</a></li>\n                        <li><a href=\"#\">Contributions</a></li>\n                    </ul>\n                </div>\n            </div>\n        </footer>\n    );\n}\n\nexport default FooterComponent;","import React from 'react';\nimport './App.css';\nimport MainComponent from './components/MainComponent';\nimport NavBarComponent from \"./components/NavBarComponent\";\nimport ContactComponent from \"./components/ContactComponent\";\nimport FooterComponent from \"./components/FooterComponent\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <NavBarComponent/>\n            <div className=\"container\">\n                <br/>\n                <br/>\n                <h1 style={{textAlign: \"center\"}}>My Projects</h1>\n                <MainComponent/>\n                <br/>\n                <br/>\n                <ContactComponent/>\n                <br/>\n                <br/>\n            </div>\n            <FooterComponent/>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}